#!/usr/bin/python3
"""
 __        __   _       ____               _____           _
 \ \      / /__| |__   |  _ \  _____   __ |_   _|__   ___ | |___
  \ \ /\ / / _ \ '_ \  | | | |/ _ \ \ / /   | |/ _ \ / _ \| / __|
   \ V  V /  __/ |_) | | |_| |  __/\ V /    | | (_) | (_) | \__ \\
    \_/\_/ \___|_.__/  |____/ \___| \_/     |_|\___/ \___/|_|___/

  Power by: PHILIPPE ASSIS
  Oficial repository: https://github.com/PhilippeAssis/webdevtools
  Version: 1.0

 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 $$                                                              $$
 $$ LICENSE                                                      $$
 $$                                                              $$
 $$ Copyright 2015 PHILIPPE ASSIS                                $$
 $$ Licensed under the Apache License,                           $$
 $$ Version 2.0 (the “License”);                                 $$
 $$ you may not use this file except in compliance with the      $$
 $$ License. You may obtain a copy of the License at             $$
 $$ http://www.apache.org/licenses/LICENSE-2.0                   $$
 $$                                                              $$
 $$ Unless required by applicable law or agreed to in writing,   $$
 $$ software distributed under the License is distributed on an  $$
 $$ “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, $$
 $$ either express or implied. See the License for the specific  $$
 $$ language governing permissions and limitations under the     $$
 $$ License.                                                     $$
 $$                                                              $$
 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
"""
from optparse import OptionParser
import os, tools

parser = OptionParser()
parser.add_option("--auto", dest="auto", help="Using default settings if the custom is not declared.", default='1')
parser.add_option("--port", dest="port", help="Port (Default 80)", default='80')
parser.add_option("--path", dest="path", help="To declare te removal, remove the site directory completely", default=False, action="store_true")
parser.add_option("--notcreatedir", dest="notcreatedir", help="Does not create directories if the specified path does not exist (Defaul: True)", default=False, action="store_true")
parser.add_option("-i","--ip", dest="ip", help="IP for which the URL address should be directed to when the host is locally generated (Default 127.0.0.1)", default='127.0.0.1')
parser.add_option("-l","--local", dest="host", help="By declaring -l, will be created an entry in /etc/hosts to the current site", default=False, action="store_true")
parser.add_option("-r","--remove", dest="remove", help="Remove site", default=False, action="store_true")

(options,args) = parser.parse_args()
site = args[0]
if options.remove is False and len(args) > 1:
    path = args[1]
elif options.remove is False and len(args) == 1 and options.auto is '1':
    print("As the directory path is not specified, '/var/www/'" +site+" is created")
    path = '/var/www/'+site
elif options.remove is True:
    path = tools.locateLine("/etc/apache2/sites-available/%s.conf" % site,'DocumentRoot')
    if path is not None:
        path = path.replace('DocumentRoot ','')
else:
    path = None

if site is None:
    print("ERROR: the url of the site is required. Use '-s www.example.com' to declare the url or '-h' for more details.")
    exit(0)

#Removing websites
if options.remove is True:
    print("Removing %s..." % site)
    if os.path.exists("/etc/apache2/sites-available/%s.conf" % site) is True:
        os.system("sudo a2dissite %s" % site)
        os.remove("/etc/apache2/sites-available/%s.conf" % site)
        os.system("sudo service apache2 reload")
        os.system("sudo service apache2 restart")
    else:
        print("NO ACTION: Site does not exist")
    if options.host is True:
        print("Removing host...")
        os.system("devhost %s -r" % site)
    if options.path is True and path is not None:
        if tools.query("Are you sure you want to remove the directory, it will be deleted altogether?",'no') is True:
            os.system("sudo rm -R %s" % path)

    print("Site successfully removed, but created directories were kept. They must be removed manually.")
    exit(0)

if path is None:
    print("Could not create or point the way of ditetório. Declare the way as the second argument or declare --auto = 1")
    exit(0)

if not os.path.isdir(path) and options.auto is not '1':
    print("Could not create the specified directory and point, reason: --auto=1 declared")
    exit(0)
elif not os.path.isdir(path) and options.auto is '1':
    os.makedirs(path)

if options.host is True:
    os.system("sudo devhost %s %s" % (site,options.ip))

print('Create directory:')
print(path+"\n")

text = """#created by site
<VirtualHost *:%s>
    ServerName %s
    ServerAdmin webmaster@localhost
    DocumentRoot %s
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>""" % (options.port,site,path)


conf = open('/etc/apache2/sites-available/%s.conf' % site,'w+')
conf.write(text)
conf.close()

print('Create apache2 config:')
print(text+'\n')

#Apache commands
os.system("sudo a2ensite %s" % site)
os.system("sudo service apache2 reload")

exit(0)