#!/usr/bin/python3
"""
 __        __   _       ____               _____           _
 \ \      / /__| |__   |  _ \  _____   __ |_   _|__   ___ | |___
  \ \ /\ / / _ \ '_ \  | | | |/ _ \ \ / /   | |/ _ \ / _ \| / __|
   \ V  V /  __/ |_) | | |_| |  __/\ V /    | | (_) | (_) | \__ \\
    \_/\_/ \___|_.__/  |____/ \___| \_/     |_|\___/ \___/|_|___/

  Power by: PHILIPPE ASSIS
  Oficial repository: https://github.com/PhilippeAssis/webdevtools
  Version: 1.0

 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 $$                                                              $$
 $$ LICENSE                                                      $$
 $$                                                              $$
 $$ Copyright 2015 PHILIPPE ASSIS                                $$
 $$ Licensed under the Apache License,                           $$
 $$ Version 2.0 (the “License”);                                 $$
 $$ you may not use this file except in compliance with the      $$
 $$ License. You may obtain a copy of the License at             $$
 $$ http://www.apache.org/licenses/LICENSE-2.0                   $$
 $$                                                              $$
 $$ Unless required by applicable law or agreed to in writing,   $$
 $$ software distributed under the License is distributed on an  $$
 $$ “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, $$
 $$ either express or implied. See the License for the specific  $$
 $$ language governing permissions and limitations under the     $$
 $$ License.                                                     $$
 $$                                                              $$
 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
"""
import os
from optparse import OptionParser

from lib.tools import tools
from lib.apache2 import apache2
from lib.hosts import hosts


usage = "usage: %prog [action*] url* [path|ip] [ip] [options]"
parser = OptionParser(usage=usage)
parser.add_option("--auto", dest="auto", help="Using default settings if the custom is not declared.", default='1')
parser.add_option("--port", dest="port", help="Port (Default 80)", default='80')
parser.add_option("--path", dest="path", help="To declare te removal, remove the site.py directory completely",
                  default=False, action="store_true")
parser.add_option("--notcreatedir", dest="notcreatedir",
                  help="Does not create directories if the specified path does not exist (Defaul: True)", default=False,
                  action="store_true")
parser.add_option("-i", "--ip", dest="ip",
                  help="IP for which the URL address should be directed to when the host is locally generated (Default 127.0.0.1)",
                  default='127.0.0.1')
parser.add_option("-l", "--local", dest="host",
                  help="By declaring -l, will be created an entry in /etc/hosts to the current site.py", default=False,
                  action="store_true")
parser.add_option("-r", "--remove", dest="remove", help="Remove site.py", default=False, action="store_true")

(options, args) = parser.parse_args()

if len(args) == 0:
    os.system("webdev -h")
    exit(0)

action = args[0]
name = args[1]

if name is None:
    print(
        "ERROR: the url of the site.py is required. Use '-s www.example.com' to declare the url or '-h' for more details.")
    exit(0)

if len(args) > 2:
    if action == 'site':
        path = args[3]
        if len(args) > 3:
            ip = args[4]
        else:
            ip = options.ip
    elif action == 'host':
        ip = args[3]
else:
    path = None
    ip = options.ip


if action == 'site':
    if options.remove is False and path is None and options.auto is '1':
        print("As the directory path is not specified, '/var/www/'" + name + " is created")
        path = '/var/www/' + name
    elif options.remove is True and path is None:
        path = tools.locateLine("/etc/apache2/sites-available/%s.conf" % name, 'DocumentRoot')
        if path is not None:
            path = path.replace('DocumentRoot ', '')
        else:
            print('Path not found, action aborted.')
            exit(0)
    else:
        path = None

    apache = apache2(name, path)
    host = hosts(name, ip)

    if options.remove:
        apache.remove(options.path)
        host.remove()
    else:
        apache.created(options.port)
        if options.host is True:
            host.created()
            host.save()

    apache.save()

elif action == 'host':
    host = hosts(name, ip)

    if options.remove:
        host.remove()
    else:
        host.created()

    host.save()